CREATE DATABASE Ace_Software;
CREATE TABLE ACTOR (
    ACTOR_ID VARCHAR(10),
	ACTOR_GROUP_ID VARCHAR(10) NOT NULL,
	ACTOR VARCHAR(100) NOT NULL,
	MOVIE_ID VARCHAR(20) NOT NULL,
	TITLE VARCHAR(100),
	PRIMARY KEY (ACTOR_ID));
CREATE TABLE ACTRESS (
    ACTRESS_ID VARCHAR(10),
	ACTRESS_GROUP_ID VARCHAR(10) NOT NULL,
	ACTRESS VARCHAR(100) NOT NULL,
	MOVIE_ID VARCHAR(20) NOT NULL,
	TITLE VARCHAR(100),
	PRIMARY KEY (ACTRESS_ID));
CREATE TABLE DIRECTOR (
    DIRECTOR_ID VARCHAR(10),
	DIRECTOR_GROUP_ID VARCHAR(10) NOT NULL,
	DIRECTOR VARCHAR(100) NOT NULL,
	MOVIE_ID VARCHAR(20) NOT NULL,
	TITLE VARCHAR(100),
	PRIMARY KEY (DIRECTOR_ID));
CREATE TABLE AWARDS (
    AWARD_ID VARCHAR(10),
	AWARD_GROUP_ID VARCHAR(10),
	AWARD VARCHAR(100),
	MOVIE_ID VARCHAR(20),
	TITLE VARCHAR(100),
	PRIMARY KEY (AWARD_ID));
CREATE TABLE MOVIE (
    MOVIE_ID VARCHAR(10),
	TITLE VARCHAR(100) NOT NULL,
	LENGTH CHAR(10),
	GENRE VARCHAR(20),
	RATING VARCHAR(2),
	YEAR VARCHAR(4),
	PRIMARY KEY (MOVIE_ID));
CREATE TABLE CUSTOMER (
    CUSTOMER_ID VARCHAR(10),
	NAME VARCHAR(100) NOT NULL,
	ADDRESS VARCHAR(100),
	CITY VARCHAR(50),
	STATE CHAR(2),
	ZIP CHAR(8),
	GENDER CHAR(1),
	BIRTH_DATE VARCHAR(8),
	PHONE CHAR(15) NOT NULL,
	PRIMARY KEY (CUSTOMER_ID));
CREATE TABLE INVENTORY (
    RENTAL_ID VARCHAR(10),
	SERIAL_NO VARCHAR(10) NOT NULL,
	MOVIE_ID VARCHAR(20) NOT NULL,
	TITLE VARCHAR(100),
	DVD_FLAG CHAR(1) NOT NULL,
	VIDEO_FLAG CHAR(1) NOT NULL,
	PRIMARY KEY (RENTAL_ID));
CREATE TABLE CATALOG (
	SERIAL_NO VARCHAR(10),
	DISTRIBUTION_ID VARCHAR(10) NOT NULL,
	DISTRIBUTOR VARCHAR(100) NOT NULL,
	GENRE VARCHAR(20),
	PRICE DECIMAL(10,2),
	TITLE VARCHAR(100),
	DVD_FLAG CHAR(1),
	VIDEO_FLAG CHAR(1),
	PRIMARY KEY (SERIAL_NO));
CREATE TABLE TRANSACTION (
	TRANSACTION_NO VARCHAR(10),
   	CUSTOMER_ID VARCHAR(10) NOT NULL,
	LINE_NO VARCHAR(10) NOT NULL,
    	RENTAL_ID VARCHAR(10) NOT NULL,
    	MOVIE_ID VARCHAR(10) NOT NULL,
	RENTAL_DATE DATE NOT NULL,
	DUE_DATE DATE NOT NULL,
	RETURN_DATE DATE,
	ORIGINAL_PRICE DECIMAL(10,2),
	LATE_FEES DECIMAL(10,2),
	DAMAGE_FEES DECIMAL(10,2),
	FAILURE_REWIND_FEES DECIMAL(10,2),
	TAXES DECIMAL(10,2),
	TOTAL_CHARGES DECIMAL(10,2) NOT NULL,
	RENTAL_FLAG CHAR(1),
	RETURN_FLAG CHAR(1),
	PRIMARY KEY (TRANSACTION_NO,LINE_NO));
ALTER TABLE ACTOR ADD CONSTRAINT MOVIE_ACTOR_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE ACTRESS ADD CONSTRAINT MOVIE_ACTRESS_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE DIRECTOR ADD CONSTRAINT MOVIE_DIRECTOR_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE AWARDS ADD CONSTRAINT MOVIE_AWARDS_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE INVENTORY ADD CONSTRAINT MOVIE_INVENTORY_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE INVENTORY ADD CONSTRAINT CATALOG_INVENTORY_FK
FOREIGN KEY (SERIAL_NO)
REFERENCES CATALOG (SERIAL_NO)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE TRANSACTION ADD CONSTRAINT CUSTOMER_TRANSACTION_FK
FOREIGN KEY (CUSTOMER_ID)
REFERENCES CUSTOMER (CUSTOMER_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE TRANSACTION ADD CONSTRAINT INVENTORY_TRANSACTION_FK
FOREIGN KEY (RENTAL_ID)
REFERENCES INVENTORY (RENTAL_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
ALTER TABLE TRANSACTION ADD CONSTRAINT MOVIE_TRANSACTION_FK
FOREIGN KEY (MOVIE_ID)
REFERENCES MOVIE (MOVIE_ID)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
